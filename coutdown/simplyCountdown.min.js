"use strict";

// Fungsi untuk mendeteksi tipe data (polyfill)
function _typeof(t) {
  return (_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
    ? function(t) { return typeof t; }
    : function(t) {
        return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype
          ? "symbol"
          : typeof t;
      })(t);
}

(function(window) {
  // Fungsi extend seperti Object.assign
  var extend = function(target, ...sources) {
    for (let source of sources) {
      let keys = Object.keys(source);
      for (let key of keys) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (_typeof(source[key]) === "object") {
            target[key] = extend(target[key], source[key]);
          } else {
            target[key] = source[key];
          }
        }
      }
    }
    return target;
  };

  // Fungsi untuk membuat elemen countdown
  var createCountdownElements = function(container, options, sectionName) {
    var outerDiv = document.createElement("div");
    var amountSpan = document.createElement("span");
    var wordSpan = document.createElement("span");
    var innerDiv = document.createElement("div");

    innerDiv.appendChild(amountSpan);
    innerDiv.appendChild(wordSpan);
    outerDiv.appendChild(innerDiv);

    outerDiv.classList.add(options.sectionClass);
    outerDiv.classList.add(sectionName);
    amountSpan.classList.add(options.amountClass);
    wordSpan.classList.add(options.wordClass);

    container.appendChild(outerDiv);

    return {
      full: outerDiv,
      amount: amountSpan,
      word: wordSpan
    };
  };

  window.simplyCountdown = function(selector, userOptions) {
    var elements, countdownInterval, now, countdownDate, secondsLeft,
      days, hours, minutes, seconds, targetDate, useUTC,
      baseContainer, pluralize, inlineOutput,
      defaultOptions = {
        year: 2015,
        month: 6,
        day: 28,
        hours: 0,
        minutes: 0,
        seconds: 0,
        words: {
          days: { singular: "day", plural: "days" },
          hours: { singular: "hour", plural: "hours" },
          minutes: { singular: "minute", plural: "minutes" },
          seconds: { singular: "second", plural: "seconds" }
        },
        plural: true,
        inline: false,
        enableUtc: false,
        onEnd: function() {},
        refresh: 1000,
        inlineClass: "simply-countdown-inline",
        sectionClass: "simply-section",
        amountClass: "simply-amount",
        wordClass: "simply-word",
        zeroPad: false,
        countUp: false
      };

    var options = extend({}, defaultOptions, userOptions);
    var targets = typeof selector === "string" ? document.querySelectorAll(selector) : selector;

    countdownDate = new Date(options.year, options.month - 1, options.day, options.hours, options.minutes, options.seconds);
    targetDate = options.enableUtc
      ? new Date(
          countdownDate.getUTCFullYear(),
          countdownDate.getUTCMonth(),
          countdownDate.getUTCDate(),
          countdownDate.getUTCHours(),
          countdownDate.getUTCMinutes(),
          countdownDate.getUTCSeconds()
        )
      : countdownDate;

    var initCountdown = function(container) {
      var display = options.inline
        ? (() => {
            var span = document.createElement("span");
            span.classList.add(options.inlineClass);
            container.appendChild(span);
            return span;
          })()
        : {
            days: createCountdownElements(container, options, "simply-days-section"),
            hours: createCountdownElements(container, options, "simply-hours-section"),
            minutes: createCountdownElements(container, options, "simply-minutes-section"),
            seconds: createCountdownElements(container, options, "simply-seconds-section")
          };

      var updateCountdown = function() {
        now = new Date();

        var current = options.enableUtc
          ? new Date(
              now.getFullYear(),
              now.getMonth(),
              now.getDate(),
              now.getHours(),
              now.getMinutes(),
              now.getSeconds()
            )
          : now;

        secondsLeft = (targetDate - current.getTime()) / 1000;

        if (secondsLeft > 0) {
          days = parseInt(secondsLeft / 86400, 10);
          secondsLeft %= 86400;
          hours = parseInt(secondsLeft / 3600, 10);
          secondsLeft %= 3600;
          minutes = parseInt(secondsLeft / 60, 10);
          seconds = parseInt(secondsLeft % 60, 10);
        } else if (options.countUp) {
          secondsLeft = (now.getTime() - targetDate) / 1000;
          days = parseInt(secondsLeft / 86400, 10);
          secondsLeft %= 86400;
          hours = parseInt(secondsLeft / 3600, 10);
          secondsLeft %= 3600;
          minutes = parseInt(secondsLeft / 60, 10);
          seconds = parseInt(secondsLeft % 60, 10);
        } else {
          days = 0;
          hours = 0;
          minutes = 0;
          seconds = 0;
          window.clearInterval(countdownInterval);
          options.onEnd();
        }

        var wordDay = options.plural && days !== 1 ? options.words.days.plural : options.words.days.singular;
        var wordHour = options.plural && hours !== 1 ? options.words.hours.plural : options.words.hours.singular;
        var wordMinute = options.plural && minutes !== 1 ? options.words.minutes.plural : options.words.minutes.singular;
        var wordSecond = options.plural && seconds !== 1 ? options.words.seconds.plural : options.words.seconds.singular;

        if (options.inline) {
          display.innerHTML = `${days} ${wordDay}, ${hours} ${wordHour}, ${minutes} ${wordMinute}, ${seconds} ${wordSecond}.`;
        } else {
          display.days.amount.textContent = (options.zeroPad && days < 10 ? "0" : "") + days;
          display.days.word.textContent = wordDay;
          display.hours.amount.textContent = (options.zeroPad && hours < 10 ? "0" : "") + hours;
          display.hours.word.textContent = wordHour;
          display.minutes.amount.textContent = (options.zeroPad && minutes < 10 ? "0" : "") + minutes;
          display.minutes.word.textContent = wordMinute;
          display.seconds.amount.textContent = (options.zeroPad && seconds < 10 ? "0" : "") + seconds;
          display.seconds.word.textContent = wordSecond;
        }
      };

      updateCountdown();
      countdownInterval = window.setInterval(updateCountdown, options.refresh);
    };

    if (targets && Symbol.iterator in Object(targets)) {
      Array.prototype.forEach.call(targets, function(el) {
        initCountdown(el);
      });
    } else {
      initCountdown(targets);
    }
  };
})(window);

// jQuery plugin support
if (window.jQuery) {
  (function($, countdownFn) {
    $.fn.simplyCountdown = function(options) {
      return countdownFn(this.selector, options);
    };
  })(jQuery, simplyCountdown);
}
